////////////////////////////////
// MINI-EX CONFIGURATION FILE //
////////////////////////////////

// SPECIFY THE SYSTEM EXECUTOR //
executor {
    name = 'local'
    //  --> common examples: local, slurm, sge, azurebatch
    queueSize = 5
}

// SINGULARITY CONTAINERS SETTINGS // (not to be adapted)
process.container = "psbdock/mini-ex:v3.1"
singularity {
    enabled = true
    cacheDir = "singularity_cache"
    autoMounts = true
}

params {

    // INPUT FILES DERIVED FROM SINGLE-CELL DATASETS //
    expressionMatrix = "$baseDir/input_net3/net3data_matrix.tsv"
    markersOut = "$baseDir/input_net3/net3data_allMarkers.tsv"
    cellsToClusters = "$baseDir/input_net3/net3data_cells2clusters.tsv"
    clustersToIdentities = "$baseDir/input_net3/net3data_identities.tsv"
    
    // CACHED FILES // (allows to reuse the initial coexpression network)
    grnboostOut = null
    // --> to infer coexpression network de novo, replace the line above by: grnboostOut = null
    
    // SPECIES SPECIFIC INFORMATION //
        tfList = "$baseDir/input_net3/net3data_TF_list_100_final.tsv"
    geneAliases = null
    // --> if gene aliases are not available, replace the line above by: geneAliases = null 
    infoTf = null
    // --> if TF info file is not available, replace the line above by: infoTf = null
    //     (when doing so, doMotifAnalysis should also be set to <null>)
    featureFileMotifs = null
    // --> if motif mapping information is not available, replace the line above by: featureFileMotifs = null
    //     (when doing so, doMotifAnalysis should also be set to <null>)
    goFile = null
    // --> if GO data is not available, replace the line above by: goFile = null 
    //     (when doing so, termsOfInterest should also be set to <null>)
    
    // PARAMETERS //
    doMotifAnalysis = false
    // --> set to <false> if no motif mapping data is available 
    //     [CAUTION: without motif data MINI-EX is less reliable]
    termsOfInterest = null
    // --> to use the standard ranking procedure, replace the line above by: termsOfInterest = null
    topMarkers = "700"
    expressionFilter = "10"
    motifFilter = "TF-F_motifs" 
    // --> to use the motifs of the TF family: motifFilter = "TF-F_motifs"
    // --> to only use the motifs known for a TF: motifFilter =  "TF_motifs"
    topRegulons = "150"
    enrichmentBackground = null
    // --> to specify an enrichment background: enrichmentBackground = "pathToTheFile", with file containing one gene id per line
    //     (when not specified, the background defaults to the list of genes that are present in the expression matrix)

    // SPECIFY OUTPUT DIRECTORY //
    outputDir = "$baseDir/output_net3"
}

// SPECIFY MEMORY AND CPUS FOR EACH PROCESS //
process {

    withName: check_user_input {
        memory = '1 GB'
    }
    withName: get_expressed_genes {
        memory = '1 GB'
    }
    withName: run_grnboost {
        memory = '6 GB'
        cpus = 4
    }
    withName: unzip_motif_mappings {
        executor = 'local'
    }
    withName: run_enricher_motifs {
        memory = '4 GB'
    }
    withName: filter_motifs {
        memory = '6 GB'
    }
    withName: filter_motifs_dummy {
        executor = 'local'
    }
    withName: get_top_degs {
        memory = '6 GB'
    }
    withName: run_enricher_cluster {
        memory = '4 GB'
    }
    withName: filter_expression {
        memory = '6 GB'
    }
    withName: make_info_file {
        memory = '6 GB'
    }
    withName: make_regulon_clustermap {
        memory = '6 GB'
    }
    withName: get_network_centrality {
        memory = '6 GB'
    }
    withName: make_go_enrichment_files {
        memory = '6 GB'
    }
    withName: run_enricher_go {
        memory = '4 GB'
    }
    withName: select_borda_procedure {
        memory = '6 GB'
    }
    withName: make_ranking_dataframe {
        memory = '6 GB'
    }
    withName: make_borda {
        memory = '6 GB'
    }
    withName: score_edges {
        memory = '6 GB'
    }
    withName: make_top_regulons_heatmaps {
        memory = '6 GB'
    }
    withName: make_regmaps {
        memory = '6 GB'
    }
    withName: make_log_file {
        executor = 'local'
    }
}
